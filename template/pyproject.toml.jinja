[project]
name = "{{ package_name }}"
description = "{{ project_description }}"
authors = [
    {name = "{{ author_name }}", email = "{{ author_email }}"}
]
license = {text = "{{ project_license.short }}"}
readme = "README.md"

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  {%- for version in python_version.versions %}
  "Programming Language :: Python :: {{ version }}",
  {%- endfor %}
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]

requires-python = ">={{ python_version.versions[0] }}"
dependencies = []

[project.urls]
Repository = "https://github.com/{{ repository_namespace }}/{{ project_slug }}"
Issues = "https://github.com/{{ repository_namespace }}/{{ project_slug }}/issues"

[build-system]
requires = ["pdm-pep517>=1.0"]
build-backend = "pdm.pep517.api"

[tool.pdm.version]
source = "scm"
write_to = "src/{{ project_slug }}/__init__.py"
write_template = "__version__ = '{}'"

[tool.pdm.dev-dependencies]
dev = [
    "nox",
    "black",
    "ruff",
]
typecheck = [
    "mypy",
]
type_stubs = []
test = [
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "pytest-github-actions-annotate-failures",
]
jupyter = [
    "jupyter",
    "notebook",
]

[tool.black]
target-version = {{ python_version.black_target_versions }}
include = '\.pyi?$'

[tool.ruff]
line-length = 88
select = ["C", "D", "E", "F", "I", "S", "W", "PLC", "PLE", "PLR", "PLW"]
ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D107"]
per-file-ignores = {
    "tests/*" = ["S101"]
    "__init__.py" = ["F401"]
}

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.mccabe]
max-complexity = 10
